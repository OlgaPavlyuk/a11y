{"mappings":"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","sources":["src/components/tabs.js","node_modules/@swc/helpers/src/_define_property.mjs","node_modules/tabbable/src/index.js","node_modules/focus-trap/index.js","src/components/utils.js","src/components/buyForm.js","src/components/modal.js","src/components/subscribe.js","src/components/combobox.js","src/components/cards.js","src/app.js"],"sourcesContent":["/*\r\n *   This content is licensed according to the W3C Software License at\r\n *   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n *\r\n *   File:   tabs-manual.js\r\n *\r\n *   Desc:   Tablist widget that implements ARIA Authoring Practices\r\n */\r\n\r\n'use strict';\r\n\r\nexport class TabsManual {\r\n  constructor(groupNode) {\r\n    this.tablistNode = groupNode;\r\n\r\n    this.tabs = [];\r\n\r\n    this.firstTab = null;\r\n    this.lastTab = null;\r\n\r\n    this.tabs = Array.from(this.tablistNode.querySelectorAll('[role=tab]'));\r\n    this.tabpanels = [];\r\n\r\n    for (var i = 0; i < this.tabs.length; i += 1) {\r\n      var tab = this.tabs[i];\r\n      var tabpanel = document.getElementById(tab.getAttribute('aria-controls'));\r\n\r\n      tab.tabIndex = -1;\r\n      tab.setAttribute('aria-selected', 'false');\r\n      this.tabpanels.push(tabpanel);\r\n\r\n      tab.addEventListener('keydown', this.onKeydown.bind(this));\r\n      tab.addEventListener('click', this.onClick.bind(this));\r\n\r\n      if (!this.firstTab) {\r\n        this.firstTab = tab;\r\n      }\r\n      this.lastTab = tab;\r\n    }\r\n\r\n    this.setSelectedTab(this.firstTab);\r\n  }\r\n\r\n  setSelectedTab(currentTab) {\r\n    for (var i = 0; i < this.tabs.length; i += 1) {\r\n      var tab = this.tabs[i];\r\n      if (currentTab === tab) {\r\n        tab.setAttribute('aria-selected', 'true');\r\n        tab.removeAttribute('tabindex');\r\n        this.tabpanels[i].classList.remove('is-hidden');\r\n      } else {\r\n        tab.setAttribute('aria-selected', 'false');\r\n        tab.tabIndex = -1;\r\n        this.tabpanels[i].classList.add('is-hidden');\r\n      }\r\n    }\r\n  }\r\n\r\n  moveFocusToTab(currentTab) {\r\n    currentTab.focus();\r\n  }\r\n\r\n  moveFocusToPreviousTab(currentTab) {\r\n    var index;\r\n\r\n    if (currentTab === this.firstTab) {\r\n      this.moveFocusToTab(this.lastTab);\r\n    } else {\r\n      index = this.tabs.indexOf(currentTab);\r\n      this.moveFocusToTab(this.tabs[index - 1]);\r\n    }\r\n  }\r\n\r\n  moveFocusToNextTab(currentTab) {\r\n    var index;\r\n\r\n    if (currentTab === this.lastTab) {\r\n      this.moveFocusToTab(this.firstTab);\r\n    } else {\r\n      index = this.tabs.indexOf(currentTab);\r\n      this.moveFocusToTab(this.tabs[index + 1]);\r\n    }\r\n  }\r\n\r\n  /* EVENT HANDLERS */\r\n\r\n  onKeydown(event) {\r\n    var tgt = event.currentTarget,\r\n      flag = false;\r\n\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n        this.moveFocusToPreviousTab(tgt);\r\n        flag = true;\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        this.moveFocusToNextTab(tgt);\r\n        flag = true;\r\n        break;\r\n\r\n      case 'Home':\r\n        this.moveFocusToTab(this.firstTab);\r\n        flag = true;\r\n        break;\r\n\r\n      case 'End':\r\n        this.moveFocusToTab(this.lastTab);\r\n        flag = true;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (flag) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // Since this example uses buttons for the tabs, the click onr also is activated\r\n  // with the space and enter keys\r\n  onClick(event) {\r\n    this.setSelectedTab(event.currentTarget);\r\n  }\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]:not(slot)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n  'details>summary:first-of-type',\n  'details',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element.getRootNode()\n    : (element) => element.ownerDocument;\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      const validShadowRoot =\n        !options.shadowRootFilter || options.shadowRootFilter(element);\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\nconst getTabindex = function (node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if (\n      (isScope ||\n        /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        node.isContentEditable) &&\n      isNaN(parseInt(node.getAttribute('tabindex'), 10))\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  let nodeRootHost = getRootNode(node).host;\n  let attached = !!(\n    nodeRootHost?.ownerDocument.contains(nodeRootHost) ||\n    node.ownerDocument.contains(node)\n  );\n\n  while (!attached && nodeRootHost) {\n    // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n    //  which means we need to get the host's host and check if that parent host is contained\n    //  in (i.e. attached to) the document\n    nodeRootHost = getRootNode(nodeRootHost).host;\n    attached = !!nodeRootHost?.ownerDocument.contains(nodeRootHost);\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabindex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getTabindex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable };\n","import { tabbable, focusable, isFocusable, isTabbable } from 'tabbable';\n\nconst activeFocusTraps = (function () {\n  const trapQueue = [];\n  return {\n    activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        const activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap(trap) {\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    },\n  };\n})();\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nconst findIndex = function (arr, fn) {\n  let idx = -1;\n\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  const getNodeForOption = function (optionName, ...params) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\n          `\\`${optionName}\\` as selector refers to no known node`\n        );\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode:\n          tabbableNodes.length > 0\n            ? tabbableNodes[tabbableNodes.length - 1]\n            : null,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          const nodeIdx = focusableNodes.findIndex((n) => n === node);\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n\n          if (forward) {\n            return focusableNodes\n              .slice(nodeIdx + 1)\n              .find((n) => isTabbable(n, config.tabbableOptions));\n          }\n\n          return focusableNodes\n            .slice(0, nodeIdx)\n            .reverse()\n            .find((n) => isTabbable(n, config.tabbableOptions));\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus:\n          config.returnFocusOnDeactivate &&\n          !isFocusable(target, config.tabbableOptions),\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  const checkFocusIn = function (e) {\n    const target = getActualTarget(e);\n    const targetContained = findContainerIndex(target) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkTab = function (e) {\n    const target = getActualTarget(e);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkKey = function (e) {\n    if (\n      isEscapeEvent(e) &&\n      valueOrHandler(config.escapeDeactivates, e) !== false\n    ) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false,\n    });\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n\n      activeFocusTraps.deactivateTrap(trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n\n      return this;\n    },\n\n    unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n\n      return this;\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    },\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n","export const isEmailValid = (email) => String(email)\r\n            .toLowerCase()\r\n            .match(\r\n              /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        );","import { isEmailValid } from './utils';\r\n\r\nexport class BuyForm {\r\n    constructor() {\r\n        this.form = document.querySelector('#buy-form');\r\n        this.fields = {\r\n            name: {\r\n                input: this.form.querySelector('#user-name'),\r\n                error: this.form.querySelector('#user-name-error'),\r\n                validate: this.validateName,\r\n            },\r\n            email: {\r\n                input: this.form.querySelector('#user-email'),\r\n                error: this.form.querySelector('#user-email-error'),\r\n                validate: this.validateEmail,\r\n            },\r\n            address: {\r\n                input: this.form.querySelector('#user-address'),\r\n                error: this.form.querySelector('#user-address-error'),\r\n                validate: this.validateAddress,\r\n            },\r\n        };\r\n        this.successMessage = this.form.querySelector('#buy_success');\r\n\r\n\r\n        this.form.addEventListener('submit', this.onSubmit);\r\n\r\n        Object.entries(this.fields).forEach(([key, value]) => {\r\n            const { input, validate } = value;\r\n            input.value = '';\r\n            this.hideError(key);\r\n            input.addEventListener('blur', () => {\r\n                if (input.value) {\r\n                    validate();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    showError = (fieldName, message) => {\r\n        const { input, error } = this.fields[fieldName];\r\n        error.textContent = message;\r\n        error.classList.add('is-visible');\r\n        error.removeAttribute('aria-hidden');\r\n        error.setAttribute('role', 'status');\r\n        error.setAttribute('aria-live', 'polite');\r\n        error.setAttribute('aria-label', message);\r\n        input.setAttribute('aria-invalid', 'true');\r\n        input.parentNode.classList.add('invalid');\r\n        input.setAttribute('aria-describedby', error.id);\r\n    }\r\n\r\n    hideError = (fieldName) => {\r\n        const { input, error } = this.fields[fieldName];\r\n        input.setAttribute('aria-invalid', 'false');\r\n        input.parentNode.classList.remove('invalid');\r\n        input.removeAttribute('aria-describedby');\r\n        error.textContent = '';\r\n        error.classList.remove('is-visible');\r\n        error.setAttribute('aria-hidden', 'true');\r\n        error.removeAttribute('aria-live');\r\n        error.removeAttribute('role');\r\n        error.removeAttribute('aria-label');\r\n    }\r\n\r\n    validateName = () => {\r\n        const errors = {\r\n            empty: 'Это поле обязательно для заполнения.',\r\n            invalid: 'Введите имя И фамилию.',\r\n        }\r\n        const name = this.fields.name.input.value;\r\n\r\n        if (!name) {\r\n            this.showError('name', errors.empty);\r\n            return false;\r\n        }\r\n\r\n        if (name.indexOf(' ') < 2) {\r\n            this.showError('name', errors.invalid);\r\n            return false;\r\n        }\r\n\r\n        this.hideError('name');\r\n        return true;\r\n    }\r\n\r\n    validateEmail = () => {\r\n        const errors = {\r\n            empty: 'Это поле обязательно для заполнения.',\r\n            invalid: 'Введите корректный адрес почты',\r\n        }\r\n        const email = this.fields.email.input.value;\r\n\r\n        if (!email) {\r\n            this.showError('email', errors.empty);\r\n            return false;\r\n        }\r\n\r\n        if (isEmailValid(email)) {\r\n            this.hideError('email');\r\n            return true;\r\n        } else {\r\n            this.showError('email', errors.invalid);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    validateAddress = () => {\r\n        const errors = {\r\n            empty: 'Это поле обязательно для заполнения.',\r\n        }\r\n\r\n        if (!this.fields.address.input.value) {\r\n            this.showError('address', errors.empty);\r\n            return false;\r\n        } else {\r\n            this.hideError('address');\r\n            return true;\r\n        }\r\n    }\r\n\r\n    showMessage = (element, message) => {\r\n        element.removeAttribute('hidden');\r\n        element.setAttribute('role', 'status');\r\n        element.setAttribute('aria-live', 'polite');\r\n        element.setAttribute('aria-label', message);\r\n        element.textContent = message;\r\n    }\r\n\r\n    hideMessage = (element) => {\r\n        element.setAttribute('hidden', 'true');\r\n        element.removeAttribute('role', 'status');\r\n        element.removeAttribute('aria-live', 'polite');\r\n        element.removeAttribute('aria-label');\r\n        element.textContent = '';\r\n    }\r\n\r\n    reset() {\r\n        this.hideMessage(this.successMessage);\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let focused = null;\r\n        const fieldsValidate =  Object.values(this.fields).map(({ input, validate}) => {\r\n            const isValid = validate();\r\n            if (!isValid && !focused) {\r\n                focused = input;\r\n            }\r\n            return isValid;\r\n        });\r\n\r\n        if (focused) {\r\n            focused.focus();\r\n        }\r\n        \r\n        console.log(fieldsValidate.every((valid) => valid));\r\n        if (fieldsValidate.every((valid) => valid)) {\r\n            console.log('true');\r\n            this.showMessage(this.successMessage, 'Вы успешно оформили заказ!');\r\n        }\r\n    };\r\n}\r\n","import { createFocusTrap } from 'focus-trap';\r\nimport { BuyForm } from './buyForm';\r\n\r\nexport class Modal {\r\n    constructor() {\r\n        this.modal = document.querySelector('.dialogs');\r\n        this.title = this.modal.querySelector('#product-name');\r\n        this.backdrop = this.modal.querySelector('.js-backdrop');\r\n        this.dialog = this.modal.querySelector('[aria-modal=\"true\"]');\r\n        this.closeBtn = this.modal.querySelector('.js-close');\r\n        this.form = null;\r\n\r\n        this.focusTrap = createFocusTrap('[aria-modal=\"true\"]', {\r\n            initialFocus: '.js-close',\r\n            onDeactivate: () => {\r\n                this.backdrop.classList.remove('active');\r\n                document.body.classList.remove('has-modal');\r\n                this.dialog.classList.add('hidden');\r\n            }\r\n        });\r\n        this.closeBtn.addEventListener('click', this.close);\r\n    }\r\n\r\n    open = (element) => {\r\n        this.title.textContent = element.currentTarget.dataset.productName;\r\n        this.backdrop.classList.add('active');\r\n        document.body.classList.add('has-modal');\r\n        this.dialog.classList.remove('hidden');\r\n        this.focusTrap.activate();\r\n        this.form = new BuyForm();\r\n    }\r\n\r\n    close = () => {\r\n        this.form.reset();\r\n        this.focusTrap.deactivate();\r\n    }\r\n}","import { isEmailValid } from './utils';\r\n\r\nexport function subscribeValidation() {\r\n    const form = document.querySelector('#subscribe');\r\n    const emailInput = form.querySelector('input#email');\r\n    const consentInput = form.querySelector('#consent');\r\n    const subscribeSuccess = form.querySelector('#subscribe_success');\r\n    form.querySelector('button').setAttribute('aria-describedby', subscribeSuccess.id);\r\n\r\n    const formFields = {\r\n        email: {\r\n            field: emailInput,\r\n            error: form.querySelector('#email-error'),\r\n        },\r\n        consent: {\r\n            field: consentInput,\r\n            error: form.querySelector('#consent-error'),\r\n        }\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        const errors = {\r\n            empty: 'Введите адрес вашей электронной почты',\r\n            invalid: 'Введите корректный адрес почты',\r\n        }\r\n        const email = emailInput.value;\r\n\r\n        if (!email) {\r\n            showError('email', errors.empty);\r\n            return false;\r\n        }\r\n\r\n        if (isEmailValid(email)) {\r\n            hideError('email');\r\n            return true;\r\n        } else {\r\n            showError('email', errors.invalid);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const validateConsent = () => {\r\n      if (consentInput.checked) {\r\n            hideError('consent');\r\n        } else {\r\n            showError('consent', 'Чтобы продолжить, Вам необходимо подтвердить согласие');\r\n        }\r\n      return consentInput.checked;\r\n    };\r\n\r\n    const showError = (fieldName, message) => {\r\n        const { field, error } = formFields[fieldName];\r\n        error.classList.add('is-visible');\r\n        error.removeAttribute('aria-hidden');\r\n        error.setAttribute('role', 'status');\r\n        error.setAttribute('aria-live', 'polite');\r\n        error.setAttribute('aria-label', message);\r\n        error.textContent = message;\r\n        field.setAttribute('aria-invalid', 'true');\r\n        field.setAttribute('aria-describedby', error.id);\r\n    }\r\n\r\n    const hideError = (fieldName) => {\r\n        const { field, error } = formFields[fieldName];\r\n        field.setAttribute('aria-invalid', 'false');\r\n        field.removeAttribute('aria-describedby');\r\n        error.textContent = '';\r\n        error.classList.remove('is-visible');\r\n        error.setAttribute('aria-hidden', 'true');\r\n        error.removeAttribute('aria-live');\r\n        error.removeAttribute('role');\r\n        error.removeAttribute('aria-label');\r\n    }\r\n\r\n    const onEmailBlur = () => {\r\n        if (emailInput.value) {\r\n            validateEmail();\r\n        }\r\n    }\r\n\r\n    const onCheckboxChange = () => {\r\n        if (consentInput.checked) {\r\n            hideError('consent');\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isEmailValid = validateEmail();\r\n        const isConsentValid = validateConsent();\r\n\r\n        if (!isEmailValid) {\r\n            emailInput.focus();\r\n        } else if (!isConsentValid) {\r\n            consentInput.focus();\r\n        }\r\n\r\n        if (isEmailValid && isConsentValid) {\r\n            subscribeSuccess.setAttribute('aria-hidden', \"false\");\r\n            subscribeSuccess.setAttribute('role', 'alert');\r\n            subscribeSuccess.setAttribute('aria-live', 'assertive');\r\n            subscribeSuccess.setAttribute('aria-label', 'Вы успешно подписаны на нашу рассылку.');\r\n            subscribeSuccess.textContent = 'Вы успешно подписаны на нашу рассылку.';\r\n        }\r\n    };\r\n\r\n    form.addEventListener('submit', onSubmit)\r\n    emailInput.addEventListener('blur', onEmailBlur);\r\n    consentInput.addEventListener('change', onCheckboxChange);\r\n}\r\n","const SelectActions = {\r\n  Close: 0,\r\n  CloseSelect: 1,\r\n  First: 2,\r\n  Last: 3,\r\n  Next: 4,\r\n  Open: 5,\r\n  PageDown: 6,\r\n  PageUp: 7,\r\n  Previous: 8,\r\n  Select: 9,\r\n  Type: 10,\r\n};\r\n\r\nfunction getActionFromKey(event, menuOpen) {\r\n  const { key, altKey, ctrlKey, metaKey } = event;\r\n  const openKeys = ['ArrowDown', 'ArrowUp', 'Enter', ' '];\r\n  if (!menuOpen && openKeys.includes(key)) {\r\n    return SelectActions.Open;\r\n  }\r\n\r\n  if (key === 'Home') {\r\n    return SelectActions.First;\r\n  }\r\n  if (key === 'End') {\r\n    return SelectActions.Last;\r\n  }\r\n\r\n  if (\r\n    key === 'Backspace' ||\r\n    key === 'Clear' ||\r\n    (key.length === 1 && key !== ' ' && !altKey && !ctrlKey && !metaKey)\r\n  ) {\r\n    return SelectActions.Type;\r\n  }\r\n\r\n  if (menuOpen) {\r\n    if (key === 'ArrowUp' && altKey) {\r\n      return SelectActions.CloseSelect;\r\n    } else if (key === 'ArrowDown' && !altKey) {\r\n      return SelectActions.Next;\r\n    } else if (key === 'ArrowUp') {\r\n      return SelectActions.Previous;\r\n    } else if (key === 'PageUp') {\r\n      return SelectActions.PageUp;\r\n    } else if (key === 'PageDown') {\r\n      return SelectActions.PageDown;\r\n    } else if (key === 'Escape') {\r\n      return SelectActions.Close;\r\n    } else if (key === 'Enter' || key === ' ') {\r\n      return SelectActions.CloseSelect;\r\n    }\r\n  }\r\n}\r\n\r\nfunction filterOptions(options = [], filter, exclude = []) {\r\n  return options.filter((option) => {\r\n    const matches = option.toLowerCase().indexOf(filter.toLowerCase()) === 0;\r\n    return matches && exclude.indexOf(option) < 0;\r\n  });\r\n}\r\n\r\nfunction getIndexByLetter(options, filter, startIndex = 0) {\r\n  const orderedOptions = [\r\n    ...options.slice(startIndex),\r\n    ...options.slice(0, startIndex),\r\n  ];\r\n  const firstMatch = filterOptions(orderedOptions, filter)[0];\r\n  const allSameLetter = (array) => array.every((letter) => letter === array[0]);\r\n\r\n  if (firstMatch) {\r\n    return options.indexOf(firstMatch);\r\n  }\r\n\r\n  else if (allSameLetter(filter.split(''))) {\r\n    const matches = filterOptions(orderedOptions, filter[0]);\r\n    return options.indexOf(matches[0]);\r\n  }\r\n\r\n  else {\r\n    return -1;\r\n  }\r\n}\r\n\r\nfunction getUpdatedIndex(currentIndex, maxIndex, action) {\r\n  const pageSize = 10;\r\n\r\n  switch (action) {\r\n    case SelectActions.First:\r\n      return 0;\r\n    case SelectActions.Last:\r\n      return maxIndex;\r\n    case SelectActions.Previous:\r\n      return Math.max(0, currentIndex - 1);\r\n    case SelectActions.Next:\r\n      return Math.min(maxIndex, currentIndex + 1);\r\n    case SelectActions.PageUp:\r\n      return Math.max(0, currentIndex - pageSize);\r\n    case SelectActions.PageDown:\r\n      return Math.min(maxIndex, currentIndex + pageSize);\r\n    default:\r\n      return currentIndex;\r\n  }\r\n}\r\n\r\nfunction isElementInView(element) {\r\n  const bounding = element.getBoundingClientRect();\r\n\r\n  return (\r\n    bounding.top >= 0 &&\r\n    bounding.left >= 0 &&\r\n    bounding.bottom <=\r\n      (window.innerHeight || document.documentElement.clientHeight) &&\r\n    bounding.right <=\r\n      (window.innerWidth || document.documentElement.clientWidth)\r\n  );\r\n}\r\n\r\nfunction isScrollable(element) {\r\n  return element && element.clientHeight < element.scrollHeight;\r\n}\r\n\r\nfunction maintainScrollVisibility(activeElement, scrollParent) {\r\n  const { offsetHeight, offsetTop } = activeElement;\r\n  const { offsetHeight: parentOffsetHeight, scrollTop } = scrollParent;\r\n\r\n  const isAbove = offsetTop < scrollTop;\r\n  const isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;\r\n\r\n  if (isAbove) {\r\n    scrollParent.scrollTo(0, offsetTop);\r\n  } else if (isBelow) {\r\n    scrollParent.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight);\r\n  }\r\n}\r\n\r\nfunction findSelectedOption(options) {\r\n    return [...options].findIndex((item) => item.getAttribute('aria-selected') === 'true');\r\n}\r\n\r\nexport class Select {\r\n    constructor(el, onChangeCallback) {\r\n        this.el = el;\r\n        this.combobox = this.el.querySelector('[role=combobox]');\r\n        this.listbox = this.el.querySelector('[role=listbox]');\r\n        this.options = this.listbox.querySelectorAll('[role=\"option\"]');\r\n        this.optionsValues = Array.from(this.options).map(option => option.textContent)\r\n        this.onChangeCallback = onChangeCallback;\r\n\r\n        this.activeIndex = findSelectedOption(this.options);\r\n        this.open = false;\r\n        this.searchString = '';\r\n        this.searchTimeout = null;\r\n\r\n        if (this.el && this.combobox && this.listbox) {\r\n            this.combobox.addEventListener('blur', this.onComboBlur);\r\n            this.combobox.addEventListener('click', this.onComboClick);\r\n            this.combobox.addEventListener('keydown', this.onComboKeyDown);\r\n        }\r\n\r\n        this.options.forEach((option, index) => {\r\n            option.addEventListener('click', (event) => {\r\n                event.stopPropagation();\r\n                this.onOptionClick(index);\r\n            });\r\n            option.addEventListener('mousedown', this.onOptionMouseDown);\r\n        });\r\n    }\r\n\r\n    updateMenuState = (open, callFocus = true) => {\r\n        this.open = open;\r\n        this.combobox.setAttribute('aria-expanded', `${open}`);\r\n        open ? this.el.classList.add('open') : this.el.classList.remove('open');\r\n\r\n        const activeID = open ? this.options[this.activeIndex].id : '';\r\n        if (activeID) {\r\n            this.combobox.setAttribute('aria-activedescendant', activeID);\r\n        } else {\r\n            this.combobox.removeAttribute('aria-activedescendant');\r\n        }\r\n\r\n\r\n        if (activeID === '' && !isElementInView(this.combobox)) {\r\n            this.combobox.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n        }\r\n\r\n        if (!open) {\r\n            this.onChangeCallback(this.options[this.activeIndex].id, this.options[this.activeIndex].textContent);\r\n            this.combobox.removeAttribute('aria-activedescendant');\r\n        }\r\n\r\n        callFocus && this.combobox.focus();\r\n    }\r\n\r\n    selectOption = (index) => {\r\n        this.activeIndex = index;\r\n\r\n        this.combobox.innerHTML = this.options[index].textContent;\r\n\r\n        [...this.options].forEach((optionEl) => {\r\n            optionEl.setAttribute('aria-selected', 'false');\r\n        });\r\n        this.options[index].setAttribute('aria-selected', 'true');\r\n    }\r\n\r\n    getSearchString = (char) => {\r\n        if (typeof this.searchTimeout === 'number') {\r\n            window.clearTimeout(this.searchTimeout);\r\n        }\r\n\r\n        this.searchTimeout = window.setTimeout(() => {\r\n            this.searchString = '';\r\n        }, 500);\r\n\r\n        this.searchString += char;\r\n        return this.searchString;\r\n    };\r\n\r\n    onComboClick = () => {\r\n        this.updateMenuState(!this.open, false);\r\n    }\r\n\r\n    onComboBlur = () => {\r\n        if (this.ignoreBlur) {\r\n            this.ignoreBlur = false;\r\n            return;\r\n        }\r\n        if (this.open) {\r\n            this.selectOption(this.activeIndex);\r\n            this.updateMenuState(false, false);\r\n        }\r\n    }\r\n\r\n    onComboKeyDown = (event) => {\r\n        const { key } = event;\r\n        const max = this.options.length - 1;\r\n        const action = getActionFromKey(event, this.open);\r\n\r\n        switch (action) {\r\n            case SelectActions.Last:\r\n            case SelectActions.First:\r\n                this.updateMenuState(true);\r\n            // intentional fallthrough\r\n            case SelectActions.Next:\r\n            case SelectActions.Previous:\r\n            case SelectActions.PageUp:\r\n            case SelectActions.PageDown:\r\n                event.preventDefault();\r\n                return this.onOptionChange(\r\n                    getUpdatedIndex(this.activeIndex, max, action)\r\n                );\r\n            case SelectActions.CloseSelect:\r\n                event.preventDefault();\r\n                this.selectOption(this.activeIndex);\r\n            // intentional fallthrough\r\n            case SelectActions.Close:\r\n                event.preventDefault();\r\n                return this.updateMenuState(false);\r\n            case SelectActions.Type:\r\n                return this.onComboType(key);\r\n            case SelectActions.Open:\r\n                event.preventDefault();\r\n                return this.updateMenuState(true);\r\n        }\r\n    }\r\n\r\n    onComboType = (letter) => {\r\n        this.updateMenuState(true);\r\n\r\n        const searchString = this.getSearchString(letter);\r\n        const searchIndex = getIndexByLetter(\r\n            this.optionsValues,\r\n            searchString,\r\n            this.activeIndex + 1\r\n        );\r\n\r\n        if (searchIndex >= 0) {\r\n            this.onOptionChange(searchIndex);\r\n        } else {\r\n            window.clearTimeout(this.searchTimeout);\r\n            this.searchString = '';\r\n        }\r\n    };\r\n\r\n    onOptionChange = function (index) {\r\n        this.activeIndex = index;\r\n\r\n        this.combobox.setAttribute('aria-activedescendant', this.options[index].id);\r\n        this.combobox.setAttribute('data-value', this.options[index].id);\r\n\r\n        [...this.options].forEach((option) => {\r\n            option.classList.remove('option-current');\r\n        });\r\n        this.options[index].classList.add('option-current');\r\n\r\n        if (isScrollable(this.listbox)) {\r\n            maintainScrollVisibility(this.options[index], this.listbox);\r\n        }\r\n\r\n        if (!isElementInView(this.options[index])) {\r\n            this.options[index].scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n        }\r\n    };\r\n\r\n    onOptionClick = (index) => {\r\n      this.onOptionChange(index);\r\n      this.selectOption(index);\r\n      this.updateMenuState(false);\r\n    };\r\n\r\n    onOptionMouseDown = () => {\r\n        this.ignoreBlur = true;\r\n    };\r\n}","import { Select } from './combobox';\r\n\r\nconst sortingCatalog = (items, currentValue) => {\r\n    switch (currentValue) {\r\n        case 'sorting-price-up':\r\n            return [...items]\r\n              .sort((a, b) => {\r\n                  return a.dataset.price > b.dataset.price ? 1 : -1\r\n              })\r\n        case 'sorting-popular':\r\n            return [...items]\r\n              .sort((a, b) => {\r\n                  return a.dataset.popular > b.dataset.popular ? 1 : -1\r\n              })\r\n        case 'sorting-price-down':\r\n            return [...items]\r\n              .sort((a, b) => {\r\n                  return a.dataset.price < b.dataset.price ? 1 : -1\r\n              })\r\n        case 'no-sorting':\r\n        default:\r\n            return [...items]\r\n              .sort((a, b) => {\r\n                  return a.dataset.key > b.dataset.key ? 1 : -1\r\n              })\r\n    }\r\n}\r\n\r\nconst filteringCards = (items, currentValue) => {\r\n    return items\r\n              .filter((item) => item.dataset.category === currentValue)\r\n}\r\n\r\nexport const sortingAndFiltering = () => {\r\n    const catalog = document.querySelector('.catalog');\r\n    const cards = document.querySelectorAll('.card');\r\n    const filterStatus = document.querySelector('#filter-status');\r\n    const sortingStatus = document.querySelector('#sorting-status');\r\n    let currentItems = [...cards];\r\n    let currentSorting = 'no-sorting';\r\n    let currentFilter = 'no-filter';\r\n\r\n    const renderCards = (reset) => {\r\n        if (!currentItems.length) {\r\n            catalog.innerHTML = 'Ничего не найдено. Попробуйте изменить параметры фильтра.';\r\n            return;\r\n        }\r\n        if (reset) {\r\n            catalog.innerHTML = '';\r\n        }\r\n        currentItems.forEach(card => catalog.appendChild(card));\r\n    }\r\n\r\n    const sortingCallback = (sorting, sortingName) => {\r\n        if (currentSorting === sorting) {\r\n            return;\r\n        }\r\n        currentItems = sortingCatalog(currentItems, sorting);\r\n        currentSorting = sorting;\r\n        sortingStatus.innerHTML = `Применена сортировка: ${sortingName}`;\r\n        renderCards();\r\n    }\r\n\r\n    const filteringCallback = (filter) => {\r\n        if (currentFilter === filter) {\r\n            return;\r\n        }\r\n        currentFilter = filter;\r\n        if (filter === 'no-filter') {\r\n            currentItems = sortingCatalog([...cards], currentSorting);\r\n        } else {\r\n            currentItems = filteringCards(sortingCatalog([...cards], currentSorting), filter);\r\n        }\r\n        filterStatus.innerHTML = `Показано ${currentItems.length} товаров из ${cards.length}`;\r\n        renderCards(true);\r\n    }\r\n\r\n    new Select(document.querySelector('.js-filter'), filteringCallback);\r\n    new Select(document.querySelector('.js-sorting'), sortingCallback);\r\n}\r\n","import { TabsManual } from './components/tabs';\r\nimport { Modal } from './components/modal';\r\nimport { subscribeValidation } from './components/subscribe';\r\nimport { sortingAndFiltering } from './components/cards';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    sortingAndFiltering();\r\n\r\n    // buy button\r\n    const modal = new Modal();\r\n    const cardButtons = document.querySelectorAll('.js-buy-card');\r\n    cardButtons.forEach((buyButton) => {\r\n        buyButton.addEventListener('click', (e) => modal.open(e));\r\n    });\r\n\r\n     // tabs\r\n    const tabLists = document.querySelectorAll('[role=tablist]');\r\n    tabLists.forEach((tab) => {\r\n       new TabsManual(tab);\r\n    });\r\n\r\n    // subscribe form\r\n    subscribeValidation();\r\n});\r\n"],"names":["currentTab","i","this","tabs","length","tab","setAttribute","removeAttribute","tabpanels","classList","remove","tabIndex","add","focus","index","firstTab","moveFocusToTab","lastTab","indexOf","onKeydown","event","currentTarget","flag","key","moveFocusToPreviousTab","tgt","moveFocusToNextTab","stopPropagation","preventDefault","setSelectedTab","groupNode","tablistNode","Array","from","querySelectorAll","tabpanel","document","getElementById","getAttribute","push","addEventListener","bind","$bb9a5d09fff8458d$export$2e2bcd8739ae039","obj","value","Object","defineProperty","enumerable","configurable","writable","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","slice","apply","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","shift","tagName","assigned","assignedElements","nestedCandidates","children","flatten","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","getTabindex","node","isScope","test","isContentEditable","isNaN","parseInt","sortOrderedTabbables","a","b","documentOrder","isInput","isNonTabbableRadio","type","isRadio","name","radioSet","radioScope","form","queryRadios","window","CSS","escape","err","console","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isZeroArea","getBoundingClientRect","width","_node$getBoundingClie","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRootHost","nodeRootHost","attached","contains","_nodeRootHost2","isNodeAttached","getClientRects","isNodeMatchingSelectorFocusable","disabled","isHiddenInput","some","child","isDetailsWithSummary","parentNode","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","content","sort","reduce","acc","sortable","concat","tabbable","isTabbable","Error","focusableCandidateSelector","isFocusable","trapQueue","activeFocusTraps","activateTrap","trap","activeTrap","pause","trapIndex","splice","deactivateTrap","unpause","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","arguments","params","_key","getActualTarget","target","composedPath","createFocusTrap","userOptions","doc","config","_objectSpread","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","undefined","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","find","getNodeForOption","optionValue","_len2","_key2","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbableOptions","focusableNodes","lastTabbableNode","nextTabbableNode","forward","nodeIdx","n","reverse","group","tryFocus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","checkPointerDown","e","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkKey","keyCode","isEscapeEvent","isTabEvent","destinationNode","containerIndex","containerGroup","shiftKey","startOfGroupIndex","_ref2","destinationGroupIndex","lastOfGroupIndex","_ref3","checkTab","checkClick","addListeners","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean","$fbd4b79ef3a59b0d$export$7c6ca1c83a3454ea","email","String","match","$dcc1231e6d5301b4$export$95bfc54735475ccd","reset","hideMessage","successMessage","constructor","fieldName","input","fields","textContent","id","errors","showError","hideError","address","focused","fieldsValidate","values","validate","isValid","log","valid","showMessage","validateName","validateEmail","validateAddress","onSubmit","entries","$f379a50718b98e2f$export$2b77a92f1a5ad772","title","dataset","productName","backdrop","body","dialog","focusTrap","modal","closeBtn","$e91214914a3cd000$export$360440dfcba94c00","initialFocus","close","$b9e76e0e3432b417$export$986ca5ffcdd3ca79","emailInput","consentInput","subscribeSuccess","formFields","field","consent","isEmailValid","isConsentValid","$a20f4d345c32c4fe$var$SelectActions","$a20f4d345c32c4fe$var$filterOptions","exclude","option","$a20f4d345c32c4fe$var$isElementInView","bounding","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","$a20f4d345c32c4fe$export$ef9b1a59e592288f","onChangeCallback","open","callFocus","combobox","activeID","activeIndex","scrollIntoView","behavior","block","innerHTML","optionEl","char","searchTimeout","searchString","updateMenuState","ignoreBlur","selectOption","max","action","menuOpen","altKey","ctrlKey","metaKey","$a20f4d345c32c4fe$var$getActionFromKey","onOptionChange","currentIndex","maxIndex","Math","min","$a20f4d345c32c4fe$var$getUpdatedIndex","onComboType","letter","getSearchString","searchIndex","startIndex","orderedOptions","firstMatch","array","split","$a20f4d345c32c4fe$var$getIndexByLetter","optionsValues","listbox","scrollHeight","scrollParent","offsetHeight","offsetTop","parentOffsetHeight","scrollTop","isBelow","scrollTo","$a20f4d345c32c4fe$var$maintainScrollVisibility","onComboBlur","onComboClick","onComboKeyDown","onOptionClick","onOptionMouseDown","$3f68f769dd2ae034$var$sortingCatalog","items","currentValue","price","popular","$3f68f769dd2ae034$export$636484490a0e4446","catalog","cards","filterStatus","sortingStatus","currentItems","currentSorting","currentFilter","renderCards","card","appendChild","category","sorting","sortingName","buyButton","$0c6376e35334c3ae$export$28b548d2dbd9e856"],"version":3,"file":"index.cab51c1c.js.map"}